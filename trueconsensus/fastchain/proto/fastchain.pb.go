// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: fastchain.proto

package fastchain

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner *Request_Inner `protobuf:"bytes,1,opt,name=inner,proto3" json:"inner,omitempty"`
	Dig   []byte         `protobuf:"bytes,2,opt,name=dig,proto3" json:"dig,omitempty"`
	Outer []byte         `protobuf:"bytes,3,opt,name=outer,proto3" json:"outer,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_fastchain_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_fastchain_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_fastchain_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetInner() *Request_Inner {
	if x != nil {
		return x.Inner
	}
	return nil
}

func (x *Request) GetDig() []byte {
	if x != nil {
		return x.Dig
	}
	return nil
}

func (x *Request) GetOuter() []byte {
	if x != nil {
		return x.Outer
	}
	return nil
}

type PbftNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr    string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Pubkey  string `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Privkey string `protobuf:"bytes,3,opt,name=privkey,proto3" json:"privkey,omitempty"`
}

func (x *PbftNode) Reset() {
	*x = PbftNode{}
	mi := &file_fastchain_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PbftNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbftNode) ProtoMessage() {}

func (x *PbftNode) ProtoReflect() protoreflect.Message {
	mi := &file_fastchain_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbftNode.ProtoReflect.Descriptor instead.
func (*PbftNode) Descriptor() ([]byte, []int) {
	return file_fastchain_proto_rawDescGZIP(), []int{1}
}

func (x *PbftNode) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *PbftNode) GetPubkey() string {
	if x != nil {
		return x.Pubkey
	}
	return ""
}

func (x *PbftNode) GetPrivkey() string {
	if x != nil {
		return x.Privkey
	}
	return ""
}

type Nodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*PbftNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *Nodes) Reset() {
	*x = Nodes{}
	mi := &file_fastchain_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Nodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nodes) ProtoMessage() {}

func (x *Nodes) ProtoReflect() protoreflect.Message {
	mi := &file_fastchain_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nodes.ProtoReflect.Descriptor instead.
func (*Nodes) Descriptor() ([]byte, []int) {
	return file_fastchain_proto_rawDescGZIP(), []int{2}
}

func (x *Nodes) GetNodes() []*PbftNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type TxnData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountNonce uint64 `protobuf:"varint,1,opt,name=AccountNonce,proto3" json:"AccountNonce,omitempty"`
	Price        int64  `protobuf:"varint,2,opt,name=Price,proto3" json:"Price,omitempty"`
	GasLimit     int64  `protobuf:"varint,3,opt,name=GasLimit,proto3" json:"GasLimit,omitempty"`
	Recipient    []byte `protobuf:"bytes,4,opt,name=Recipient,proto3" json:"Recipient,omitempty"`
	Amount       int64  `protobuf:"varint,5,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Payload      []byte `protobuf:"bytes,6,opt,name=Payload,proto3" json:"Payload,omitempty"`
	Signature    []byte `protobuf:"bytes,7,opt,name=Signature,proto3" json:"Signature,omitempty"`
	Hash         []byte `protobuf:"bytes,8,opt,name=Hash,proto3" json:"Hash,omitempty"`
}

func (x *TxnData) Reset() {
	*x = TxnData{}
	mi := &file_fastchain_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxnData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxnData) ProtoMessage() {}

func (x *TxnData) ProtoReflect() protoreflect.Message {
	mi := &file_fastchain_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxnData.ProtoReflect.Descriptor instead.
func (*TxnData) Descriptor() ([]byte, []int) {
	return file_fastchain_proto_rawDescGZIP(), []int{3}
}

func (x *TxnData) GetAccountNonce() uint64 {
	if x != nil {
		return x.AccountNonce
	}
	return 0
}

func (x *TxnData) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TxnData) GetGasLimit() int64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *TxnData) GetRecipient() []byte {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *TxnData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TxnData) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TxnData) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *TxnData) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *TxnData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_fastchain_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_fastchain_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_fastchain_proto_rawDescGZIP(), []int{4}
}

func (x *Transaction) GetData() *TxnData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PbftBlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number     int64  `protobuf:"varint,1,opt,name=Number,proto3" json:"Number,omitempty"`
	GasLimit   int64  `protobuf:"varint,2,opt,name=GasLimit,proto3" json:"GasLimit,omitempty"`
	GasUsed    int64  `protobuf:"varint,3,opt,name=GasUsed,proto3" json:"GasUsed,omitempty"`
	Timestamp  int64  `protobuf:"varint,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	ParentHash []byte `protobuf:"bytes,5,opt,name=ParentHash,proto3" json:"ParentHash,omitempty"`
	TxnsHash   []byte `protobuf:"bytes,6,opt,name=TxnsHash,proto3" json:"TxnsHash,omitempty"`
}

func (x *PbftBlockHeader) Reset() {
	*x = PbftBlockHeader{}
	mi := &file_fastchain_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PbftBlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbftBlockHeader) ProtoMessage() {}

func (x *PbftBlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_fastchain_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbftBlockHeader.ProtoReflect.Descriptor instead.
func (*PbftBlockHeader) Descriptor() ([]byte, []int) {
	return file_fastchain_proto_rawDescGZIP(), []int{5}
}

func (x *PbftBlockHeader) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *PbftBlockHeader) GetGasLimit() int64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *PbftBlockHeader) GetGasUsed() int64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *PbftBlockHeader) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PbftBlockHeader) GetParentHash() []byte {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

func (x *PbftBlockHeader) GetTxnsHash() []byte {
	if x != nil {
		return x.TxnsHash
	}
	return nil
}

type PbftBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *PbftBlockHeader `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	Txns   []*Transaction   `protobuf:"bytes,2,rep,name=Txns,proto3" json:"Txns,omitempty"`
	Signs  []string         `protobuf:"bytes,3,rep,name=Signs,proto3" json:"Signs,omitempty"`
}

func (x *PbftBlock) Reset() {
	*x = PbftBlock{}
	mi := &file_fastchain_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PbftBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbftBlock) ProtoMessage() {}

func (x *PbftBlock) ProtoReflect() protoreflect.Message {
	mi := &file_fastchain_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbftBlock.ProtoReflect.Descriptor instead.
func (*PbftBlock) Descriptor() ([]byte, []int) {
	return file_fastchain_proto_rawDescGZIP(), []int{6}
}

func (x *PbftBlock) GetHeader() *PbftBlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *PbftBlock) GetTxns() []*Transaction {
	if x != nil {
		return x.Txns
	}
	return nil
}

func (x *PbftBlock) GetSigns() []string {
	if x != nil {
		return x.Signs
	}
	return nil
}

type TrueChain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks          []*PbftBlock     `protobuf:"bytes,1,rep,name=Blocks,proto3" json:"Blocks,omitempty"`
	LastBlockHeader *PbftBlockHeader `protobuf:"bytes,2,opt,name=LastBlockHeader,proto3" json:"LastBlockHeader,omitempty"`
}

func (x *TrueChain) Reset() {
	*x = TrueChain{}
	mi := &file_fastchain_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrueChain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrueChain) ProtoMessage() {}

func (x *TrueChain) ProtoReflect() protoreflect.Message {
	mi := &file_fastchain_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrueChain.ProtoReflect.Descriptor instead.
func (*TrueChain) Descriptor() ([]byte, []int) {
	return file_fastchain_proto_rawDescGZIP(), []int{7}
}

func (x *TrueChain) GetBlocks() []*PbftBlock {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *TrueChain) GetLastBlockHeader() *PbftBlockHeader {
	if x != nil {
		return x.LastBlockHeader
	}
	return nil
}

type GenericResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *GenericResp) Reset() {
	*x = GenericResp{}
	mi := &file_fastchain_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenericResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericResp) ProtoMessage() {}

func (x *GenericResp) ProtoReflect() protoreflect.Message {
	mi := &file_fastchain_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericResp.ProtoReflect.Descriptor instead.
func (*GenericResp) Descriptor() ([]byte, []int) {
	return file_fastchain_proto_rawDescGZIP(), []int{8}
}

func (x *GenericResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type Request_Inner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Seq       int32      `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`
	View      int32      `protobuf:"varint,3,opt,name=view,proto3" json:"view,omitempty"`
	Type      int32      `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Block     *PbftBlock `protobuf:"bytes,5,opt,name=block,proto3" json:"block,omitempty"`
	Timestamp int64      `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Request_Inner) Reset() {
	*x = Request_Inner{}
	mi := &file_fastchain_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request_Inner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Inner) ProtoMessage() {}

func (x *Request_Inner) ProtoReflect() protoreflect.Message {
	mi := &file_fastchain_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Inner.ProtoReflect.Descriptor instead.
func (*Request_Inner) Descriptor() ([]byte, []int) {
	return file_fastchain_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Request_Inner) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Request_Inner) GetSeq() int32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *Request_Inner) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *Request_Inner) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Request_Inner) GetBlock() *PbftBlock {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *Request_Inner) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_fastchain_proto protoreflect.FileDescriptor

var file_fastchain_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x66, 0x61, 0x73, 0x74, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xeb, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x05, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x64, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x1a, 0x91, 0x01, 0x0a, 0x05,
	0x49, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x50, 0x62, 0x66, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22,
	0x50, 0x0a, 0x08, 0x50, 0x62, 0x66, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x6b, 0x65,
	0x79, 0x22, 0x28, 0x0a, 0x05, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x62, 0x66, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xe1, 0x01, 0x0a, 0x07,
	0x54, 0x78, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x22,
	0x2b, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x54,
	0x78, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb9, 0x01, 0x0a,
	0x0f, 0x50, 0x62, 0x66, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x73, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x47, 0x61, 0x73, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08,
	0x54, 0x78, 0x6e, 0x73, 0x48, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x54, 0x78, 0x6e, 0x73, 0x48, 0x61, 0x73, 0x68, 0x22, 0x6d, 0x0a, 0x09, 0x50, 0x62, 0x66, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x62, 0x66, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x20, 0x0a, 0x04, 0x54, 0x78, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x54, 0x78, 0x6e,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x69, 0x67, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x53, 0x69, 0x67, 0x6e, 0x73, 0x22, 0x6b, 0x0a, 0x09, 0x54, 0x72, 0x75, 0x65, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x06, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x50, 0x62, 0x66, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x06, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x3a, 0x0a, 0x0f, 0x4c, 0x61, 0x73, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x50, 0x62, 0x66, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x0f, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x22, 0x1f, 0x0a, 0x0b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x4d, 0x73, 0x67, 0x32, 0x3a, 0x0a, 0x09, 0x46, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x12, 0x2d, 0x0a, 0x0d, 0x4e, 0x65, 0x77, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x0c, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x42, 0x29, 0x5a, 0x27, 0x74, 0x72, 0x75, 0x65, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73,
	0x75, 0x73, 0x2f, 0x66, 0x61, 0x73, 0x74, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x3b, 0x66, 0x61, 0x73, 0x74, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fastchain_proto_rawDescOnce sync.Once
	file_fastchain_proto_rawDescData = file_fastchain_proto_rawDesc
)

func file_fastchain_proto_rawDescGZIP() []byte {
	file_fastchain_proto_rawDescOnce.Do(func() {
		file_fastchain_proto_rawDescData = protoimpl.X.CompressGZIP(file_fastchain_proto_rawDescData)
	})
	return file_fastchain_proto_rawDescData
}

var file_fastchain_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_fastchain_proto_goTypes = []any{
	(*Request)(nil),         // 0: Request
	(*PbftNode)(nil),        // 1: PbftNode
	(*Nodes)(nil),           // 2: Nodes
	(*TxnData)(nil),         // 3: TxnData
	(*Transaction)(nil),     // 4: Transaction
	(*PbftBlockHeader)(nil), // 5: PbftBlockHeader
	(*PbftBlock)(nil),       // 6: PbftBlock
	(*TrueChain)(nil),       // 7: TrueChain
	(*GenericResp)(nil),     // 8: GenericResp
	(*Request_Inner)(nil),   // 9: Request.Inner
}
var file_fastchain_proto_depIdxs = []int32{
	9, // 0: Request.inner:type_name -> Request.Inner
	1, // 1: Nodes.nodes:type_name -> PbftNode
	3, // 2: Transaction.data:type_name -> TxnData
	5, // 3: PbftBlock.Header:type_name -> PbftBlockHeader
	4, // 4: PbftBlock.Txns:type_name -> Transaction
	6, // 5: TrueChain.Blocks:type_name -> PbftBlock
	5, // 6: TrueChain.LastBlockHeader:type_name -> PbftBlockHeader
	6, // 7: Request.Inner.block:type_name -> PbftBlock
	4, // 8: FastChain.NewTxnRequest:input_type -> Transaction
	8, // 9: FastChain.NewTxnRequest:output_type -> GenericResp
	9, // [9:10] is the sub-list for method output_type
	8, // [8:9] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_fastchain_proto_init() }
func file_fastchain_proto_init() {
	if File_fastchain_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fastchain_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fastchain_proto_goTypes,
		DependencyIndexes: file_fastchain_proto_depIdxs,
		MessageInfos:      file_fastchain_proto_msgTypes,
	}.Build()
	File_fastchain_proto = out.File
	file_fastchain_proto_rawDesc = nil
	file_fastchain_proto_goTypes = nil
	file_fastchain_proto_depIdxs = nil
}
